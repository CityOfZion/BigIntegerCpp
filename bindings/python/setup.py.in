import sys
from setuptools import Extension, setup
from setuptools.command.build_ext import build_ext

if sys.version_info < (3, 7):
    sys.exit('Python < 3.7 is not supported')


# We add 2 dummy classes that don't do anything other than inform distutils/setuptools that the package is not pure
# This in turn will make sure that the `bdist_wheel` command will generate the correct file name
class DummyExtension(Extension):
    def __init__(self, name, sourcedir=''):
        Extension.__init__(self, name, sources=[], language='C++')


class DummyBuild(build_ext):
    def run(self):
        pass


setup(
    author='Erik van den Brink (ixje), merl111',
    author_email='erik@coz.io',
    name='pybiginteger',
    description="C++ port of the C# BigInteger class",
    version='${PROJECT_VERSION}',
    packages=[''],
    package_data={
       '': ['pybiginteger${PYTHON_MODULE_EXTENSION}']
    },
    data_files=[('',['pybiginteger${PYTHON_MODULE_EXTENSION}'])],
    classifiers=[
        'Development Status :: 4 - Beta',
        'Intended Audience :: Developers',
        'License :: OSI Approved :: MIT License',
        'Programming Language :: Python :: 3.7',
        'Programming Language :: Python :: 3.8',
        "Programming Language :: C++"
    ],
    ext_modules=[DummyExtension('pybiginteger')],
    cmdclass=dict(build_ext=DummyBuild)
)
