version: 2.1

jobs:
  build:
    docker:
      - image: "debian:bookworm"
    steps:
      - run:
          name: Installing build essentials
          command: |
            apt-get update
            apt-get install -y ca-certificates git openssh-client wget lsb-release software-properties-common gnupg build-essential
            wget https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh
            ./llvm.sh 17
            gcc --version
            rm llvm.sh
      - add_ssh_keys:
          fingerprints:
            - "SHA256:hhaDbTWq/OPaKSkPxt3KrZSr69GE/d95KX4DsbjdxGM"
      - checkout
      - run:
          name: Install CMAKE
          command: |
            apt-get install -y wget
            wget https://github.com/Kitware/CMake/releases/download/v3.18.0-rc3/cmake-3.18.0-rc3-Linux-x86_64.sh
            mkdir /opt/cmake/
            /bin/sh cmake-3.18.0-rc3-Linux-x86_64.sh --skip-license --prefix=/opt/cmake 
            ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
            cmake --version
      - run:
          name: Configure w/GCC
          command: |
            mkdir build-gcc
            cd build-gcc
            cmake -D BUILD_TESTING=ON ..
      - run:
          name: Build release w/GCC
          working_directory: ~/project/build-gcc
          command: 'cmake --build . --config Release'
      - run:
          name: Unit Testing w/GCC
          working_directory: ~/project/build-gcc
          command: ./tests/unit_tests
      - run:
          name: Configure w/Clang
          command: |
            mkdir build-clang
            cd build-clang
            export CXX=/usr/bin/clang++-17
            cmake -D BUILD_TESTING=ON ..
      - run:
          name: Build release w/Clang
          working_directory: ~/project/build-clang
          command: 'cmake --build . --config Release'
      - run:
          name: Unit Testing w/Clang
          working_directory: ~/project/build-clang
          command: ./tests/unit_tests
